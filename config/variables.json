{
    "local_training": "True",
    "bucket_name": "robosub-2020",
    "distributed_training": "False",
    "gcp_zone": "us-central1",
    "labelbox_export_project_list": "bottom_roulette_cvm_20190909,bottom_roulette_cvm_20191111,front_dice_morrisson_20181212,front_dice_morrisson_20180707",
    "model_config_bottom_ssd_mobilenet_v1_coco": "model {\r\n  ssd {\r\n    num_classes: NUM_CLASSES\r\n    image_resizer {\r\n      fixed_shape_resizer {\r\n        height: 300\r\n        width: 300\r\n      }\r\n    }\r\n    feature_extractor {\r\n      type: \"ssd_mobilenet_v1\"\r\n      depth_multiplier: 1.0\r\n      min_depth: 16\r\n      conv_hyperparams {\r\n        regularizer {\r\n          l2_regularizer {\r\n            weight: 3.99999989895e-05\r\n          }\r\n        }\r\n        initializer {\r\n          truncated_normal_initializer {\r\n            mean: 0.0\r\n            stddev: 0.0299999993294\r\n          }\r\n        }\r\n        activation: RELU_6\r\n        batch_norm {\r\n          decay: 0.999700009823\r\n          center: true\r\n          scale: true\r\n          epsilon: 0.0010000000475\r\n          train: true\r\n        }\r\n      }\r\n    }\r\n    box_coder {\r\n      faster_rcnn_box_coder {\r\n        y_scale: 10.0\r\n        x_scale: 10.0\r\n        height_scale: 5.0\r\n        width_scale: 5.0\r\n      }\r\n    }\r\n    matcher {\r\n      argmax_matcher {\r\n        matched_threshold: 0.5\r\n        unmatched_threshold: 0.5\r\n        ignore_thresholds: false\r\n        negatives_lower_than_unmatched: true\r\n        force_match_for_each_row: true\r\n      }\r\n    }\r\n    similarity_calculator {\r\n      iou_similarity {\r\n      }\r\n    }\r\n    box_predictor {\r\n      convolutional_box_predictor {\r\n        conv_hyperparams {\r\n          regularizer {\r\n            l2_regularizer {\r\n              weight: 3.99999989895e-05\r\n            }\r\n          }\r\n          initializer {\r\n            truncated_normal_initializer {\r\n              mean: 0.0\r\n              stddev: 0.0299999993294\r\n            }\r\n          }\r\n          activation: RELU_6\r\n          batch_norm {\r\n            decay: 0.999700009823\r\n            center: true\r\n            scale: true\r\n            epsilon: 0.0010000000475\r\n            train: true\r\n          }\r\n        }\r\n        min_depth: 0\r\n        max_depth: 0\r\n        num_layers_before_predictor: 0\r\n        use_dropout: false\r\n        dropout_keep_probability: 0.800000011921\r\n        kernel_size: 1\r\n        box_code_size: 4\r\n        apply_sigmoid_to_scores: false\r\n      }\r\n    }\r\n    anchor_generator {\r\n      ssd_anchor_generator {\r\n        num_layers: 6\r\n        min_scale: 0.20000000298\r\n        max_scale: 0.949999988079\r\n        aspect_ratios: 1.0\r\n        aspect_ratios: 2.0\r\n        aspect_ratios: 0.5\r\n        aspect_ratios: 3.0\r\n        aspect_ratios: 0.333299994469\r\n      }\r\n    }\r\n    post_processing {\r\n      batch_non_max_suppression {\r\n        score_threshold: 0.300000011921\r\n        iou_threshold: 0.600000023842\r\n        max_detections_per_class: 100\r\n        max_total_detections: 100\r\n      }\r\n      score_converter: SIGMOID\r\n    }\r\n    normalize_loss_by_num_matches: true\r\n    loss {\r\n      localization_loss {\r\n        weighted_smooth_l1 {\r\n        }\r\n      }\r\n      classification_loss {\r\n        weighted_sigmoid {\r\n        }\r\n      }\r\n      hard_example_miner {\r\n        num_hard_examples: 3000\r\n        iou_threshold: 0.990000009537\r\n        loss_type: CLASSIFICATION\r\n        max_negatives_per_positive: 3\r\n        min_negatives_per_image: 0\r\n      }\r\n      classification_weight: 1.0\r\n      localization_weight: 1.0\r\n    }\r\n  }\r\n}\r\ntrain_config {\r\n  batch_size: TRAINING_BATCH_SIZE\r\n  data_augmentation_options {\r\n    random_horizontal_flip {\r\n    }\r\n  }\r\n  data_augmentation_options {\r\n    ssd_random_crop {\r\n    }\r\n  }\r\n  optimizer {\r\n    rms_prop_optimizer {\r\n      learning_rate {\r\n        exponential_decay_learning_rate {\r\n          initial_learning_rate: 0.00400000018999\r\n          decay_steps: 800720\r\n          decay_factor: 0.949999988079\r\n        }\r\n      }\r\n      momentum_optimizer_value: 0.899999976158\r\n      decay: 0.899999976158\r\n      epsilon: 1.0\r\n    }\r\n  }\r\n  fine_tune_checkpoint: \"PRE_TRAINED_MODEL_CHECKPOINT_PATH\"\r\n  from_detection_checkpoint: true\r\n  num_steps: TRAINING_EPOCH_COUNT\r\n}\r\ntrain_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  tf_record_input_reader {\r\n    input_path: \"TRAIN_TF_RECORD_PATH\"\r\n  }\r\n}\r\neval_config {\r\n  num_examples: 8000\r\n  max_evals: 10\r\n  use_moving_averages: false\r\n}\r\neval_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  shuffle: false\r\n  num_readers: 1\r\n  tf_record_input_reader {\r\n    input_path: \"VAL_TF_RECORD_PATH\"\r\n  }\r\n}\r\n",
    "model_config_bottom_ssd_mobilenet_v1_coco_training_batch_size": 24,
    "model_config_bottom_ssd_mobilenet_v1_coco_training_epoch_count": 20000,
    "model_config_bottom_ssd_mobilenet_v1_fpn_coco": "model {\r\n  ssd {\r\n    num_classes: NUM_CLASSES\r\n    image_resizer {\r\n      fixed_shape_resizer {\r\n        height: 640\r\n        width: 640\r\n      }\r\n    }\r\n    feature_extractor {\r\n      type: \"ssd_mobilenet_v1_fpn\"\r\n      depth_multiplier: 1.0\r\n      min_depth: 16\r\n      conv_hyperparams {\r\n        regularizer {\r\n          l2_regularizer {\r\n            weight: 3.99999989895e-05\r\n          }\r\n        }\r\n        initializer {\r\n          random_normal_initializer {\r\n            mean: 0.0\r\n            stddev: 0.00999999977648\r\n          }\r\n        }\r\n        activation: RELU_6\r\n        batch_norm {\r\n          decay: 0.996999979019\r\n          scale: true\r\n          epsilon: 0.0010000000475\r\n        }\r\n      }\r\n      override_base_feature_extractor_hyperparams: true\r\n    }\r\n    box_coder {\r\n      faster_rcnn_box_coder {\r\n        y_scale: 10.0\r\n        x_scale: 10.0\r\n        height_scale: 5.0\r\n        width_scale: 5.0\r\n      }\r\n    }\r\n    matcher {\r\n      argmax_matcher {\r\n        matched_threshold: 0.5\r\n        unmatched_threshold: 0.5\r\n        ignore_thresholds: false\r\n        negatives_lower_than_unmatched: true\r\n        force_match_for_each_row: true\r\n        use_matmul_gather: true\r\n      }\r\n    }\r\n    similarity_calculator {\r\n      iou_similarity {\r\n      }\r\n    }\r\n    box_predictor {\r\n      weight_shared_convolutional_box_predictor {\r\n        conv_hyperparams {\r\n          regularizer {\r\n            l2_regularizer {\r\n              weight: 3.99999989895e-05\r\n            }\r\n          }\r\n          initializer {\r\n            random_normal_initializer {\r\n              mean: 0.0\r\n              stddev: 0.00999999977648\r\n            }\r\n          }\r\n          activation: RELU_6\r\n          batch_norm {\r\n            decay: 0.996999979019\r\n            scale: true\r\n            epsilon: 0.0010000000475\r\n          }\r\n        }\r\n        depth: 256\r\n        num_layers_before_predictor: 4\r\n        kernel_size: 3\r\n        class_prediction_bias_init: -4.59999990463\r\n      }\r\n    }\r\n    anchor_generator {\r\n      multiscale_anchor_generator {\r\n        min_level: 3\r\n        max_level: 7\r\n        anchor_scale: 4.0\r\n        aspect_ratios: 1.0\r\n        aspect_ratios: 2.0\r\n        aspect_ratios: 0.5\r\n        scales_per_octave: 2\r\n      }\r\n    }\r\n    post_processing {\r\n      batch_non_max_suppression {\r\n        score_threshold: 0.300000011921\r\n        iou_threshold: 0.600000023842\r\n        max_detections_per_class: 100\r\n        max_total_detections: 100\r\n      }\r\n      score_converter: SIGMOID\r\n    }\r\n    normalize_loss_by_num_matches: true\r\n    loss {\r\n      localization_loss {\r\n        weighted_smooth_l1 {\r\n        }\r\n      }\r\n      classification_loss {\r\n        weighted_sigmoid_focal {\r\n          gamma: 2.0\r\n          alpha: 0.25\r\n        }\r\n      }\r\n      classification_weight: 1.0\r\n      localization_weight: 1.0\r\n    }\r\n    encode_background_as_zeros: true\r\n    normalize_loc_loss_by_codesize: true\r\n    inplace_batchnorm_update: true\r\n    freeze_batchnorm: false\r\n  }\r\n}\r\ntrain_config {\r\n  batch_size: TRAINING_BATCH_SIZE\r\n  data_augmentation_options {\r\n    random_horizontal_flip {\r\n    }\r\n  }\r\n  data_augmentation_options {\r\n    random_crop_image {\r\n      min_object_covered: 0.0\r\n      min_aspect_ratio: 0.75\r\n      max_aspect_ratio: 3.0\r\n      min_area: 0.75\r\n      max_area: 1.0\r\n      overlap_thresh: 0.0\r\n    }\r\n  }\r\n  sync_replicas: true\r\n  optimizer {\r\n    momentum_optimizer {\r\n      learning_rate {\r\n        cosine_decay_learning_rate {\r\n          learning_rate_base: 0.0799999982119\r\n          total_steps: 12500\r\n          warmup_learning_rate: 0.0266660004854\r\n          warmup_steps: 1000\r\n        }\r\n      }\r\n      momentum_optimizer_value: 0.899999976158\r\n    }\r\n    use_moving_average: false\r\n  }\r\n  fine_tune_checkpoint: \"PRE_TRAINED_MODEL_CHECKPOINT_PATH\"\r\n  num_steps: TRAINING_EPOCH_COUNT\r\n  startup_delay_steps: 0.0\r\n  replicas_to_aggregate: 8\r\n  max_number_of_boxes: 100\r\n  unpad_groundtruth_tensors: false\r\n}\r\ntrain_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  tf_record_input_reader {\r\n    input_path: \"TRAIN_TF_RECORD_PATH\"\r\n  }\r\n}\r\neval_config {\r\n  num_examples: 8000\r\n  metrics_set: \"coco_detection_metrics\"\r\n  use_moving_averages: false\r\n}\r\neval_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  shuffle: false\r\n  num_readers: 1\r\n  tf_record_input_reader {\r\n    input_path: \"VAL_TF_RECORD_PATH\"\r\n  }\r\n}\r\n",
    "model_config_bottom_ssd_mobilenet_v1_fpn_coco_training_batch_size": 124,
    "model_config_bottom_ssd_mobilenet_v1_fpn_coco_training_epoch_count": 12500,
    "model_config_bottom_ssd_mobilenet_v2_coco": "model {\r\n  ssd {\r\n    num_classes: NUM_CLASSES\r\n    image_resizer {\r\n      fixed_shape_resizer {\r\n        height: 300\r\n        width: 300\r\n      }\r\n    }\r\n    feature_extractor {\r\n      type: \"ssd_mobilenet_v2\"\r\n      depth_multiplier: 1.0\r\n      min_depth: 16\r\n      conv_hyperparams {\r\n        regularizer {\r\n          l2_regularizer {\r\n            weight: 3.99999989895e-05\r\n          }\r\n        }\r\n        initializer {\r\n          truncated_normal_initializer {\r\n            mean: 0.0\r\n            stddev: 0.0299999993294\r\n          }\r\n        }\r\n        activation: RELU_6\r\n        batch_norm {\r\n          decay: 0.999700009823\r\n          center: true\r\n          scale: true\r\n          epsilon: 0.0010000000475\r\n          train: true\r\n        }\r\n      }\r\n      batch_norm_trainable: true\r\n      use_depthwise: true\r\n    }\r\n    box_coder {\r\n      faster_rcnn_box_coder {\r\n        y_scale: 10.0\r\n        x_scale: 10.0\r\n        height_scale: 5.0\r\n        width_scale: 5.0\r\n      }\r\n    }\r\n    matcher {\r\n      argmax_matcher {\r\n        matched_threshold: 0.5\r\n        unmatched_threshold: 0.5\r\n        ignore_thresholds: false\r\n        negatives_lower_than_unmatched: true\r\n        force_match_for_each_row: true\r\n      }\r\n    }\r\n    similarity_calculator {\r\n      iou_similarity {\r\n      }\r\n    }\r\n    box_predictor {\r\n      convolutional_box_predictor {\r\n        conv_hyperparams {\r\n          regularizer {\r\n            l2_regularizer {\r\n              weight: 3.99999989895e-05\r\n            }\r\n          }\r\n          initializer {\r\n            truncated_normal_initializer {\r\n              mean: 0.0\r\n              stddev: 0.0299999993294\r\n            }\r\n          }\r\n          activation: RELU_6\r\n          batch_norm {\r\n            decay: 0.999700009823\r\n            center: true\r\n            scale: true\r\n            epsilon: 0.0010000000475\r\n            train: true\r\n          }\r\n        }\r\n        min_depth: 0\r\n        max_depth: 0\r\n        num_layers_before_predictor: 0\r\n        use_dropout: false\r\n        dropout_keep_probability: 0.800000011921\r\n        kernel_size: 3\r\n        box_code_size: 4\r\n        apply_sigmoid_to_scores: false\r\n      }\r\n    }\r\n    anchor_generator {\r\n      ssd_anchor_generator {\r\n        num_layers: 6\r\n        min_scale: 0.20000000298\r\n        max_scale: 0.949999988079\r\n        aspect_ratios: 1.0\r\n        aspect_ratios: 2.0\r\n        aspect_ratios: 0.5\r\n        aspect_ratios: 3.0\r\n        aspect_ratios: 0.333299994469\r\n      }\r\n    }\r\n    post_processing {\r\n      batch_non_max_suppression {\r\n        score_threshold: 0.300000011921\r\n        iou_threshold: 0.600000023842\r\n        max_detections_per_class: 100\r\n        max_total_detections: 100\r\n      }\r\n      score_converter: SIGMOID\r\n    }\r\n    normalize_loss_by_num_matches: true\r\n    loss {\r\n      localization_loss {\r\n        weighted_smooth_l1 {\r\n        }\r\n      }\r\n      classification_loss {\r\n        weighted_sigmoid {\r\n        }\r\n      }\r\n      hard_example_miner {\r\n        num_hard_examples: 3000\r\n        iou_threshold: 0.990000009537\r\n        loss_type: CLASSIFICATION\r\n        max_negatives_per_positive: 3\r\n        min_negatives_per_image: 3\r\n      }\r\n      classification_weight: 1.0\r\n      localization_weight: 1.0\r\n    }\r\n  }\r\n}\r\ntrain_config {\r\n  batch_size: TRAINING_BATCH_SIZE\r\n  data_augmentation_options {\r\n    random_horizontal_flip {\r\n    }\r\n  }\r\n  data_augmentation_options {\r\n    ssd_random_crop {\r\n    }\r\n  }\r\n  optimizer {\r\n    rms_prop_optimizer {\r\n      learning_rate {\r\n        exponential_decay_learning_rate {\r\n          initial_learning_rate: 0.00400000018999\r\n          decay_steps: 800720\r\n          decay_factor: 0.949999988079\r\n        }\r\n      }\r\n      momentum_optimizer_value: 0.899999976158\r\n      decay: 0.899999976158\r\n      epsilon: 1.0\r\n    }\r\n  }\r\n  fine_tune_checkpoint: \"PRE_TRAINED_MODEL_CHECKPOINT_PATH\"\r\n  num_steps: TRAINING_EPOCH_COUNT\r\n  fine_tune_checkpoint_type: \"detection\"\r\n}\r\ntrain_input_reader {\r\n  label_map_path:\"LABEL_MAP_PATH\"\r\n  tf_record_input_reader {\r\n    input_path: \"TRAIN_TF_RECORD_PATH\"\r\n  }\r\n}\r\neval_config {\r\n  num_examples: 8000\r\n  max_evals: 10\r\n  use_moving_averages: false\r\n}\r\neval_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  shuffle: false\r\n  num_readers: 1\r\n  tf_record_input_reader {\r\n    input_path: \"VAL_TF_RECORD_PATH\"\r\n  }\r\n}\r\n",
    "model_config_bottom_ssd_mobilenet_v2_coco_training_batch_size": 24,
    "model_config_bottom_ssd_mobilenet_v2_coco_training_epoch_count": 20000,
    "model_config_front_ssd_mobilenet_v1_coco": "model {\r\n  ssd {\r\n    num_classes: NUM_CLASSES\r\n    image_resizer {\r\n      fixed_shape_resizer {\r\n        height: 300\r\n        width: 300\r\n      }\r\n    }\r\n    feature_extractor {\r\n      type: \"ssd_mobilenet_v1\"\r\n      depth_multiplier: 1.0\r\n      min_depth: 16\r\n      conv_hyperparams {\r\n        regularizer {\r\n          l2_regularizer {\r\n            weight: 3.99999989895e-05\r\n          }\r\n        }\r\n        initializer {\r\n          truncated_normal_initializer {\r\n            mean: 0.0\r\n            stddev: 0.0299999993294\r\n          }\r\n        }\r\n        activation: RELU_6\r\n        batch_norm {\r\n          decay: 0.999700009823\r\n          center: true\r\n          scale: true\r\n          epsilon: 0.0010000000475\r\n          train: true\r\n        }\r\n      }\r\n    }\r\n    box_coder {\r\n      faster_rcnn_box_coder {\r\n        y_scale: 10.0\r\n        x_scale: 10.0\r\n        height_scale: 5.0\r\n        width_scale: 5.0\r\n      }\r\n    }\r\n    matcher {\r\n      argmax_matcher {\r\n        matched_threshold: 0.5\r\n        unmatched_threshold: 0.5\r\n        ignore_thresholds: false\r\n        negatives_lower_than_unmatched: true\r\n        force_match_for_each_row: true\r\n      }\r\n    }\r\n    similarity_calculator {\r\n      iou_similarity {\r\n      }\r\n    }\r\n    box_predictor {\r\n      convolutional_box_predictor {\r\n        conv_hyperparams {\r\n          regularizer {\r\n            l2_regularizer {\r\n              weight: 3.99999989895e-05\r\n            }\r\n          }\r\n          initializer {\r\n            truncated_normal_initializer {\r\n              mean: 0.0\r\n              stddev: 0.0299999993294\r\n            }\r\n          }\r\n          activation: RELU_6\r\n          batch_norm {\r\n            decay: 0.999700009823\r\n            center: true\r\n            scale: true\r\n            epsilon: 0.0010000000475\r\n            train: true\r\n          }\r\n        }\r\n        min_depth: 0\r\n        max_depth: 0\r\n        num_layers_before_predictor: 0\r\n        use_dropout: false\r\n        dropout_keep_probability: 0.800000011921\r\n        kernel_size: 1\r\n        box_code_size: 4\r\n        apply_sigmoid_to_scores: false\r\n      }\r\n    }\r\n    anchor_generator {\r\n      ssd_anchor_generator {\r\n        num_layers: 6\r\n        min_scale: 0.20000000298\r\n        max_scale: 0.949999988079\r\n        aspect_ratios: 1.0\r\n        aspect_ratios: 2.0\r\n        aspect_ratios: 0.5\r\n        aspect_ratios: 3.0\r\n        aspect_ratios: 0.333299994469\r\n      }\r\n    }\r\n    post_processing {\r\n      batch_non_max_suppression {\r\n        score_threshold: 0.300000011921\r\n        iou_threshold: 0.600000023842\r\n        max_detections_per_class: 100\r\n        max_total_detections: 100\r\n      }\r\n      score_converter: SIGMOID\r\n    }\r\n    normalize_loss_by_num_matches: true\r\n    loss {\r\n      localization_loss {\r\n        weighted_smooth_l1 {\r\n        }\r\n      }\r\n      classification_loss {\r\n        weighted_sigmoid {\r\n        }\r\n      }\r\n      hard_example_miner {\r\n        num_hard_examples: 3000\r\n        iou_threshold: 0.990000009537\r\n        loss_type: CLASSIFICATION\r\n        max_negatives_per_positive: 3\r\n        min_negatives_per_image: 0\r\n      }\r\n      classification_weight: 1.0\r\n      localization_weight: 1.0\r\n    }\r\n  }\r\n}\r\ntrain_config {\r\n  batch_size: TRAINING_BATCH_SIZE\r\n  data_augmentation_options {\r\n    random_horizontal_flip {\r\n    }\r\n  }\r\n  data_augmentation_options {\r\n    ssd_random_crop {\r\n    }\r\n  }\r\n  optimizer {\r\n    rms_prop_optimizer {\r\n      learning_rate {\r\n        exponential_decay_learning_rate {\r\n          initial_learning_rate: 0.00400000018999\r\n          decay_steps: 800720\r\n          decay_factor: 0.949999988079\r\n        }\r\n      }\r\n      momentum_optimizer_value: 0.899999976158\r\n      decay: 0.899999976158\r\n      epsilon: 1.0\r\n    }\r\n  }\r\n  fine_tune_checkpoint: \"PRE_TRAINED_MODEL_CHECKPOINT_PATH\"\r\n  from_detection_checkpoint: true\r\n  num_steps: TRAINING_EPOCH_COUNT\r\n}\r\ntrain_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  tf_record_input_reader {\r\n    input_path: \"TRAIN_TF_RECORD_PATH\"\r\n  }\r\n}\r\neval_config {\r\n  num_examples: 8000\r\n  max_evals: 10\r\n  use_moving_averages: false\r\n}\r\neval_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  shuffle: false\r\n  num_readers: 1\r\n  tf_record_input_reader {\r\n    input_path: \"VAL_TF_RECORD_PATH\"\r\n  }\r\n}\r\n",
    "model_config_front_ssd_mobilenet_v1_coco_training_batch_size": 24,
    "model_config_front_ssd_mobilenet_v1_coco_training_epoch_count": 20000,
    "model_config_front_ssd_mobilenet_v1_fpn_coco": "model {\r\n  ssd {\r\n    num_classes: NUM_CLASSES\r\n    image_resizer {\r\n      fixed_shape_resizer {\r\n        height: 640\r\n        width: 640\r\n      }\r\n    }\r\n    feature_extractor {\r\n      type: \"ssd_mobilenet_v1_fpn\"\r\n      depth_multiplier: 1.0\r\n      min_depth: 16\r\n      conv_hyperparams {\r\n        regularizer {\r\n          l2_regularizer {\r\n            weight: 3.99999989895e-05\r\n          }\r\n        }\r\n        initializer {\r\n          random_normal_initializer {\r\n            mean: 0.0\r\n            stddev: 0.00999999977648\r\n          }\r\n        }\r\n        activation: RELU_6\r\n        batch_norm {\r\n          decay: 0.996999979019\r\n          scale: true\r\n          epsilon: 0.0010000000475\r\n        }\r\n      }\r\n      override_base_feature_extractor_hyperparams: true\r\n    }\r\n    box_coder {\r\n      faster_rcnn_box_coder {\r\n        y_scale: 10.0\r\n        x_scale: 10.0\r\n        height_scale: 5.0\r\n        width_scale: 5.0\r\n      }\r\n    }\r\n    matcher {\r\n      argmax_matcher {\r\n        matched_threshold: 0.5\r\n        unmatched_threshold: 0.5\r\n        ignore_thresholds: false\r\n        negatives_lower_than_unmatched: true\r\n        force_match_for_each_row: true\r\n        use_matmul_gather: true\r\n      }\r\n    }\r\n    similarity_calculator {\r\n      iou_similarity {\r\n      }\r\n    }\r\n    box_predictor {\r\n      weight_shared_convolutional_box_predictor {\r\n        conv_hyperparams {\r\n          regularizer {\r\n            l2_regularizer {\r\n              weight: 3.99999989895e-05\r\n            }\r\n          }\r\n          initializer {\r\n            random_normal_initializer {\r\n              mean: 0.0\r\n              stddev: 0.00999999977648\r\n            }\r\n          }\r\n          activation: RELU_6\r\n          batch_norm {\r\n            decay: 0.996999979019\r\n            scale: true\r\n            epsilon: 0.0010000000475\r\n          }\r\n        }\r\n        depth: 256\r\n        num_layers_before_predictor: 4\r\n        kernel_size: 3\r\n        class_prediction_bias_init: -4.59999990463\r\n      }\r\n    }\r\n    anchor_generator {\r\n      multiscale_anchor_generator {\r\n        min_level: 3\r\n        max_level: 7\r\n        anchor_scale: 4.0\r\n        aspect_ratios: 1.0\r\n        aspect_ratios: 2.0\r\n        aspect_ratios: 0.5\r\n        scales_per_octave: 2\r\n      }\r\n    }\r\n    post_processing {\r\n      batch_non_max_suppression {\r\n        score_threshold: 0.300000011921\r\n        iou_threshold: 0.600000023842\r\n        max_detections_per_class: 100\r\n        max_total_detections: 100\r\n      }\r\n      score_converter: SIGMOID\r\n    }\r\n    normalize_loss_by_num_matches: true\r\n    loss {\r\n      localization_loss {\r\n        weighted_smooth_l1 {\r\n        }\r\n      }\r\n      classification_loss {\r\n        weighted_sigmoid_focal {\r\n          gamma: 2.0\r\n          alpha: 0.25\r\n        }\r\n      }\r\n      classification_weight: 1.0\r\n      localization_weight: 1.0\r\n    }\r\n    encode_background_as_zeros: true\r\n    normalize_loc_loss_by_codesize: true\r\n    inplace_batchnorm_update: true\r\n    freeze_batchnorm: false\r\n  }\r\n}\r\ntrain_config {\r\n  batch_size: TRAINING_BATCH_SIZE\r\n  data_augmentation_options {\r\n    random_horizontal_flip {\r\n    }\r\n  }\r\n  data_augmentation_options {\r\n    random_crop_image {\r\n      min_object_covered: 0.0\r\n      min_aspect_ratio: 0.75\r\n      max_aspect_ratio: 3.0\r\n      min_area: 0.75\r\n      max_area: 1.0\r\n      overlap_thresh: 0.0\r\n    }\r\n  }\r\n  sync_replicas: true\r\n  optimizer {\r\n    momentum_optimizer {\r\n      learning_rate {\r\n        cosine_decay_learning_rate {\r\n          learning_rate_base: 0.0799999982119\r\n          total_steps: 12500\r\n          warmup_learning_rate: 0.0266660004854\r\n          warmup_steps: 1000\r\n        }\r\n      }\r\n      momentum_optimizer_value: 0.899999976158\r\n    }\r\n    use_moving_average: false\r\n  }\r\n  fine_tune_checkpoint: \"PRE_TRAINED_MODEL_CHECKPOINT_PATH\"\r\n  num_steps: TRAINING_EPOCH_COUNT\r\n  startup_delay_steps: 0.0\r\n  replicas_to_aggregate: 8\r\n  max_number_of_boxes: 100\r\n  unpad_groundtruth_tensors: false\r\n}\r\ntrain_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  tf_record_input_reader {\r\n    input_path: \"TRAIN_TF_RECORD_PATH\"\r\n  }\r\n}\r\neval_config {\r\n  num_examples: 8000\r\n  metrics_set: \"coco_detection_metrics\"\r\n  use_moving_averages: false\r\n}\r\neval_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  shuffle: false\r\n  num_readers: 1\r\n  tf_record_input_reader {\r\n    input_path: \"VAL_TF_RECORD_PATH\"\r\n  }\r\n}\r\n",
    "model_config_front_ssd_mobilenet_v1_fpn_coco_training_batch_size": 124,
    "model_config_front_ssd_mobilenet_v1_fpn_coco_training_epoch_count": 12500,
    "model_config_front_ssd_mobilenet_v2_coco": "model {\r\n  ssd {\r\n    num_classes: NUM_CLASSES\r\n    image_resizer {\r\n      fixed_shape_resizer {\r\n        height: 300\r\n        width: 300\r\n      }\r\n    }\r\n    feature_extractor {\r\n      type: \"ssd_mobilenet_v2\"\r\n      depth_multiplier: 1.0\r\n      min_depth: 16\r\n      conv_hyperparams {\r\n        regularizer {\r\n          l2_regularizer {\r\n            weight: 3.99999989895e-05\r\n          }\r\n        }\r\n        initializer {\r\n          truncated_normal_initializer {\r\n            mean: 0.0\r\n            stddev: 0.0299999993294\r\n          }\r\n        }\r\n        activation: RELU_6\r\n        batch_norm {\r\n          decay: 0.999700009823\r\n          center: true\r\n          scale: true\r\n          epsilon: 0.0010000000475\r\n          train: true\r\n        }\r\n      }\r\n      batch_norm_trainable: true\r\n      use_depthwise: true\r\n    }\r\n    box_coder {\r\n      faster_rcnn_box_coder {\r\n        y_scale: 10.0\r\n        x_scale: 10.0\r\n        height_scale: 5.0\r\n        width_scale: 5.0\r\n      }\r\n    }\r\n    matcher {\r\n      argmax_matcher {\r\n        matched_threshold: 0.5\r\n        unmatched_threshold: 0.5\r\n        ignore_thresholds: false\r\n        negatives_lower_than_unmatched: true\r\n        force_match_for_each_row: true\r\n      }\r\n    }\r\n    similarity_calculator {\r\n      iou_similarity {\r\n      }\r\n    }\r\n    box_predictor {\r\n      convolutional_box_predictor {\r\n        conv_hyperparams {\r\n          regularizer {\r\n            l2_regularizer {\r\n              weight: 3.99999989895e-05\r\n            }\r\n          }\r\n          initializer {\r\n            truncated_normal_initializer {\r\n              mean: 0.0\r\n              stddev: 0.0299999993294\r\n            }\r\n          }\r\n          activation: RELU_6\r\n          batch_norm {\r\n            decay: 0.999700009823\r\n            center: true\r\n            scale: true\r\n            epsilon: 0.0010000000475\r\n            train: true\r\n          }\r\n        }\r\n        min_depth: 0\r\n        max_depth: 0\r\n        num_layers_before_predictor: 0\r\n        use_dropout: false\r\n        dropout_keep_probability: 0.800000011921\r\n        kernel_size: 3\r\n        box_code_size: 4\r\n        apply_sigmoid_to_scores: false\r\n      }\r\n    }\r\n    anchor_generator {\r\n      ssd_anchor_generator {\r\n        num_layers: 6\r\n        min_scale: 0.20000000298\r\n        max_scale: 0.949999988079\r\n        aspect_ratios: 1.0\r\n        aspect_ratios: 2.0\r\n        aspect_ratios: 0.5\r\n        aspect_ratios: 3.0\r\n        aspect_ratios: 0.333299994469\r\n      }\r\n    }\r\n    post_processing {\r\n      batch_non_max_suppression {\r\n        score_threshold: 0.300000011921\r\n        iou_threshold: 0.600000023842\r\n        max_detections_per_class: 100\r\n        max_total_detections: 100\r\n      }\r\n      score_converter: SIGMOID\r\n    }\r\n    normalize_loss_by_num_matches: true\r\n    loss {\r\n      localization_loss {\r\n        weighted_smooth_l1 {\r\n        }\r\n      }\r\n      classification_loss {\r\n        weighted_sigmoid {\r\n        }\r\n      }\r\n      hard_example_miner {\r\n        num_hard_examples: 3000\r\n        iou_threshold: 0.990000009537\r\n        loss_type: CLASSIFICATION\r\n        max_negatives_per_positive: 3\r\n        min_negatives_per_image: 3\r\n      }\r\n      classification_weight: 1.0\r\n      localization_weight: 1.0\r\n    }\r\n  }\r\n}\r\ntrain_config {\r\n  batch_size: TRAINING_BATCH_SIZE\r\n  data_augmentation_options {\r\n    random_horizontal_flip {\r\n    }\r\n  }\r\n  data_augmentation_options {\r\n    ssd_random_crop {\r\n    }\r\n  }\r\n  optimizer {\r\n    rms_prop_optimizer {\r\n      learning_rate {\r\n        exponential_decay_learning_rate {\r\n          initial_learning_rate: 0.00400000018999\r\n          decay_steps: 800720\r\n          decay_factor: 0.949999988079\r\n        }\r\n      }\r\n      momentum_optimizer_value: 0.899999976158\r\n      decay: 0.899999976158\r\n      epsilon: 1.0\r\n    }\r\n  }\r\n  fine_tune_checkpoint: \"PRE_TRAINED_MODEL_CHECKPOINT_PATH\"\r\n  num_steps: TRAINING_EPOCH_COUNT\r\n  fine_tune_checkpoint_type: \"detection\"\r\n}\r\ntrain_input_reader {\r\n  label_map_path:\"LABEL_MAP_PATH\"\r\n  tf_record_input_reader {\r\n    input_path: \"TRAIN_TF_RECORD_PATH\"\r\n  }\r\n}\r\neval_config {\r\n  num_examples: 8000\r\n  max_evals: 10\r\n  use_moving_averages: false\r\n}\r\neval_input_reader {\r\n  label_map_path: \"LABEL_MAP_PATH\"\r\n  shuffle: false\r\n  num_readers: 1\r\n  tf_record_input_reader {\r\n    input_path: \"VAL_TF_RECORD_PATH\"\r\n  }\r\n}",
    "model_config_front_ssd_mobilenet_v2_coco_training_batch_size": 24,
    "model_config_front_ssd_mobilenet_v2_coco_training_epoch_count": 20000,
    "ontology_bottom": {
        "classifications": [],
        "tools": [
            {
                "color": "Red",
                "name": "bat",
                "tool": "rectangle"
            },
            {
                "color": "Blue",
                "name": "wolf",
                "tool": "rectangle"
            }
        ]
    },
    "ontology_front": {
        "classifications": [],
        "tools": [
            {
                "color": "Green",
                "name": "vetalas",
                "tool": "rectangle"
            },
            {
                "color": "Yellow",
                "name": "jiangshi",
                "tool": "rectangle"
            },
            {
                "color": "Magenta",
                "name": "vampire",
                "tool": "rectangle"
            },
            {
                "color": "Pink",
                "name": "draugr",
                "tool": "rectangle"
            },
            {
                "color": "Cornsilk",
                "name": "answag",
                "tool": "rectangle"
            }
        ]
    },
    "tensorflow_model_zoo_markdown_url": "https://raw.githubusercontent.com/tensorflow/models/master/research/object_detection/g3doc/tf1_detection_zoo.md",
    "tensorflow_model_zoo_models": "ssd_mobilenet_v1_coco,ssd_mobilenet_v1_fpn_coco,ssd_mobilenet_v2_coco",
    "tpu_training_supported_models": "ssd_mobilenet_v1_0.75_depth_coco,ssd_mobilenet_v1_quantized_coco,ssd_mobilenet_v1_0.75_depth_quantized_coco,ssd_mobilenet_v1_ppn_coco,ssd_mobilenet_v1_ppn_coco,ssd_resnet_50_fpn_coco",
    "video_feed_sources": "front,bottom"
}